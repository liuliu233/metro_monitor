[{"D:\\Document\\code\\react\\sz_metro\\src\\index.js":"1","D:\\Document\\code\\react\\sz_metro\\src\\reportWebVitals.js":"2","D:\\Document\\code\\react\\sz_metro\\src\\App.js":"3","D:\\Document\\code\\react\\sz_metro\\src\\Component\\Navigate.js":"4","D:\\Document\\code\\react\\sz_metro\\src\\Component\\Role.js":"5","D:\\Document\\code\\react\\sz_metro\\src\\Store\\Store.js":"6","D:\\Document\\code\\react\\sz_metro\\src\\Store\\Reducer.js":"7","D:\\Document\\code\\react\\sz_metro\\src\\Store\\ActionTypes.js":"8","D:\\Document\\code\\react\\sz_metro\\src\\Component\\Login.js":"9","D:\\Document\\code\\react\\sz_metro\\src\\Component\\Log.js":"10","D:\\Document\\code\\react\\sz_metro\\src\\Component\\Register.js":"11","D:\\Document\\code\\react\\sz_metro\\src\\Store\\Actions.js":"12","D:\\Document\\code\\react\\sz_metro\\src\\Component\\Users.js":"13","D:\\Document\\code\\react\\sz_metro\\src\\Component\\Goback.js":"14","D:\\Documents\\metro_monitor\\src\\index.js":"15","D:\\Documents\\metro_monitor\\src\\reportWebVitals.js":"16","D:\\Documents\\metro_monitor\\src\\App.js":"17","D:\\Documents\\metro_monitor\\src\\Store\\Store.js":"18","D:\\Documents\\metro_monitor\\src\\Component\\Login.js":"19","D:\\Documents\\metro_monitor\\src\\Component\\Navigate.js":"20","D:\\Documents\\metro_monitor\\src\\Component\\Users.js":"21","D:\\Documents\\metro_monitor\\src\\Component\\Role.js":"22","D:\\Documents\\metro_monitor\\src\\Store\\Actions.js":"23","D:\\Documents\\metro_monitor\\src\\Component\\Log.js":"24","D:\\Documents\\metro_monitor\\src\\Store\\Reducer.js":"25","D:\\Documents\\metro_monitor\\src\\Component\\Register.js":"26","D:\\Documents\\metro_monitor\\src\\Component\\Goback.js":"27","D:\\Documents\\metro_monitor\\src\\Store\\ActionTypes.js":"28"},{"size":866,"mtime":1613739326089,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":7650,"mtime":1614842323275,"results":"32","hashOfConfig":"30"},{"size":2941,"mtime":1614842234303,"results":"33","hashOfConfig":"30"},{"size":14729,"mtime":1614736621049,"results":"34","hashOfConfig":"30"},{"size":110,"mtime":1612252489413,"results":"35","hashOfConfig":"30"},{"size":386,"mtime":1614319045364,"results":"36","hashOfConfig":"30"},{"size":66,"mtime":1614319045515,"results":"37","hashOfConfig":"30"},{"size":545,"mtime":1614513663863,"results":"38","hashOfConfig":"30"},{"size":3232,"mtime":1614218728619,"results":"39","hashOfConfig":"30"},{"size":4337,"mtime":1614513767215,"results":"40","hashOfConfig":"30"},{"size":285,"mtime":1614319045429,"results":"41","hashOfConfig":"30"},{"size":11261,"mtime":1614514194589,"results":"42","hashOfConfig":"30"},{"size":705,"mtime":1614308808541,"results":"43","hashOfConfig":"30"},{"size":866,"mtime":1613739326089,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"45"},{"size":7650,"mtime":1614842323275,"results":"47","hashOfConfig":"45"},{"size":110,"mtime":1612252489413,"results":"48","hashOfConfig":"45"},{"size":545,"mtime":1614513663863,"results":"49","hashOfConfig":"45"},{"size":2941,"mtime":1614842234303,"results":"50","hashOfConfig":"45"},{"size":11261,"mtime":1614514194589,"results":"51","hashOfConfig":"45"},{"size":14729,"mtime":1614736621049,"results":"52","hashOfConfig":"45"},{"size":285,"mtime":1614319045429,"results":"53","hashOfConfig":"45"},{"size":3232,"mtime":1614218728619,"results":"54","hashOfConfig":"45"},{"size":386,"mtime":1614319045364,"results":"55","hashOfConfig":"45"},{"size":4337,"mtime":1614513767215,"results":"56","hashOfConfig":"45"},{"size":705,"mtime":1614308808541,"results":"57","hashOfConfig":"45"},{"size":66,"mtime":1614319045515,"results":"58","hashOfConfig":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"vjm5lw",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"7ilc86",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"97"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"97"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"97"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},"D:\\Document\\code\\react\\sz_metro\\src\\index.js",[],["126","127"],"D:\\Document\\code\\react\\sz_metro\\src\\reportWebVitals.js",[],"D:\\Document\\code\\react\\sz_metro\\src\\App.js",["128","129","130","131"],"import { Input, Button, Form, Modal, Layout, Typography, Avatar, Menu, Dropdown, message } from 'antd';\nimport React, { useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { UserOutlined, MoreOutlined } from '@ant-design/icons';\nimport Navigate from './Component/Navigate';\nimport Role from './Component/Role';\nimport Users from './Component/Users'\nimport { connect } from 'react-redux';\nimport * as Actions from './Store/Actions';\n\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { Title } = Typography;\n\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nfunction App({ userInfo, history, onLogout }) {\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [form] = Form.useForm();\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n    const onFinish = (values) => {\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n        const urlencoded = new URLSearchParams();\n        urlencoded.append(\"username\", userInfo.username);\n        urlencoded.append(\"password\", values.password);\n        urlencoded.append(\"newPassword\", values.newPassword);\n        console.log(values.password);\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: urlencoded,\n            redirect: 'follow'\n        };\n\n        fetch(\"http://localhost:3001/users/updatePassword\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                if(result.status===0){\n                    message.success('更新成功！');\n                }else{\n                    message.error('更新失败！')\n                }\n            })\n            .catch(error => console.log('error', error));\n\n        setIsModalVisible(false);\n    };\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n    const menu = (\n        <Menu>\n            <Menu.Item>\n                <a onClick={() => {showModal()}}>\n                    修改密码\n                </a>\n            </Menu.Item>\n            <Menu.Item>\n                <a onClick={() => {onLogout()}}>\n                    退出登录\n                </a>\n            </Menu.Item>\n\n        </Menu>\n    );\n    const userIcon=(\n        <>\n            <div style={{color:'#FFF', display:'inline', marginLeft:10}}>\n                {userInfo.username}\n            </div>\n            <Dropdown overlay={menu}>\n                <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                    <MoreOutlined style={{fontSize:15, color:\"#FFF\"}}/>\n                </a>\n            </Dropdown>\n        </>\n    );\n    const NoUser=(\n        <div style={{ display:'inline', marginLeft:20}}>\n            <a style={{color:'#fff'}} onClick={() => {\n                history.push('/log');\n            }}>\n                未登录\n            </a>\n        </div>\n    );\n    return (\n        <>\n        <Layout style={{ minHeight: '100vh' }}>\n            <Sider width='200'>\n                <Navigate/>\n            </Sider>\n            <Layout className=\"site-layout\">\n                <Header className=\"site-layout-background\" style={{ padding: 0, alignItems: 'center', background:\"#1E90FF\" }} >\n                    <div>\n                        <div  style={{float:'right', marginRight:15}}>\n                            <Avatar icon={<UserOutlined />} />\n                            {Object.keys(userInfo).length!==0?userIcon:NoUser}\n                        </div>\n                    </div>\n                    <Title level={3} style={{color:'#fff', margin:15}}>深圳地建自动化监测系统平台</Title>\n                </Header>\n                <Content style={{ margin: '20px' }}>\n                    <Route path='/home/role' render={()=>{\n                        if(Object.keys(userInfo).length!==0){\n                            return <Role/>\n                        }else{\n                            return <Redirect to=\"/log\" />\n                        }\n                    }}/>\n                    <Route path='/home/users' render={()=>{\n                        if(Object.keys(userInfo).length!==0){\n                            return <Users/>\n                        }else{\n                            return <Redirect to=\"/log\" />\n                        }\n                    }}/>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>深圳市地质建设工程公司 版权所有</Footer>\n            </Layout>\n        </Layout>\n        <Modal\n            title=\"修改密码\"\n            visible={isModalVisible}\n            onCancel={() => {handleCancel()}}\n            footer={null}\n            maskClosable={false}\n            destroyOnClose={true}\n        >\n            <Form\n                form={form}\n                name=\"register\"\n                scrollToFirstError\n                style={{margin:\"10px 30px\"}}\n                onFinish={onFinish}\n            >\n                <Form.Item\n                    name=\"password\"\n                    label=\"原始密码\"\n                    rules={[\n                        {\n                            required: true,\n                            message: '请输入原始密码!',\n                        },\n                    ]}\n                    hasFeedback\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"newPassword\"\n                    label=\"新密码\"\n                    rules={[\n                        {\n                            required: true,\n                            message: '请输入新密码!',\n                        },\n                    ]}\n                    hasFeedback\n                >\n                    <Input.Password/>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"confirm\"\n                    label=\"确认新密码\"\n                    dependencies={['newPassword']}\n                    hasFeedback\n                    rules={[\n                        {\n                            required: true,\n                            message: '请确认新密码!',\n                        },\n                        ({ getFieldValue }) => ({\n                            validator(_, value) {\n                                if (!value || getFieldValue('newPassword') === value) {\n                                    return Promise.resolve();\n                                }\n\n                                return Promise.reject('两次输入的密码不一致!');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{marginLeft:-20}}>\n                        确认\n                    </Button>\n                    <Button onClick={() => {handleCancel()}} style={{marginLeft:70}}>\n                        取消\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Modal>\n        </>\n    );\n}\n\nfunction mapState(state) {\n    return {\n        userInfo: state.userInfo\n    }\n}\n\nfunction mapDispatch(dispatch) {\n    return {\n        onLogout:() => {\n            dispatch(Actions.logout());\n        }\n    }\n}\n\n\nexport default connect(mapState, mapDispatch)(App);\n","D:\\Document\\code\\react\\sz_metro\\src\\Component\\Navigate.js",["132"],"import React from 'react';\r\nimport { Menu } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport icon from '../img/logo.png';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst Navigate = () => {\r\n    const [openKeys, setOpenKeys] = React.useState([\"sub1\"]);\r\n    const onOpenChange = keys => {\r\n        const latestOpenKey = keys.find(key => openKeys.indexOf(key) === -1);\r\n        setOpenKeys(latestOpenKey ? [ latestOpenKey] : []);\r\n    };\r\n\r\n\r\n    return (\r\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['0']} openKeys={openKeys} onOpenChange={onOpenChange} style={{ width: 200 }}>\r\n            <div style={{margin:'3px', height:'50px'}}>\r\n                <img src={icon} height=\"100%\" width=\"100%\"/>\r\n            </div>\r\n            <Menu.Item key=\"0\"><Link to='/home'>首页</Link></Menu.Item>\r\n            <SubMenu key=\"sub2\" title=\"系统设置\">\r\n                <Menu.Item key=\"1\"><Link to='/home/role'>角色管理</Link></Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu key=\"sub3\" title=\"信息管理\">\r\n                <Menu.Item key=\"2\"><Link to='/home/users'>人员管理</Link></Menu.Item>\r\n                <Menu.Item key=\"3\">人员审核</Menu.Item>\r\n                <Menu.Item key=\"4\">单位管理</Menu.Item>\r\n                <Menu.Item key=\"5\">部门管理</Menu.Item>\r\n                <Menu.Item key=\"6\">资料管理</Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu key=\"sub4\" title=\"设备管理\">\r\n                <Menu.Item key=\"7\">采集设备库</Menu.Item>\r\n                <Menu.Item key=\"8\">传感器库</Menu.Item>\r\n                <Menu.Item key=\"9\">采集设备预警组</Menu.Item>\r\n                <Menu.Item key=\"10\">采集设备状态管理</Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu key=\"sub5\" title=\"项目中心\">\r\n                <Menu.Item key=\"11\">项目中心</Menu.Item>\r\n                <Menu.Item key=\"12\">标段管理</Menu.Item>\r\n                <Menu.Item key=\"13\">测项测点</Menu.Item>\r\n                <Menu.Item key=\"14\">团队列表</Menu.Item>\r\n                <Menu.Item key=\"15\">项目审核</Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu key=\"sub6\" title=\"数据中心\">\r\n                <Menu.Item key=\"16\">数据处理设置</Menu.Item>\r\n                <Menu.Item key=\"17\">原始数据</Menu.Item>\r\n                <Menu.Item key=\"18\">数据分析</Menu.Item>\r\n                <Menu.Item key=\"19\">数据超限预警监测</Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu key=\"sub7\" title=\"文档库\">\r\n                <Menu.Item key=\"20\">机构文档</Menu.Item>\r\n                <Menu.Item key=\"21\">帮助文档</Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu key=\"sub8\" title=\"报表中心\">\r\n                <Menu.Item key=\"22\">报表管理</Menu.Item>\r\n                <Menu.Item key=\"23\">模板管理</Menu.Item>\r\n            </SubMenu>\r\n        </Menu>\r\n    )\r\n};\r\n\r\nexport default Navigate;\r\n\r\n","D:\\Document\\code\\react\\sz_metro\\src\\Component\\Role.js",["133","134"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, Space, Tooltip, Input, Button, Drawer, Select, Checkbox, Form, Popconfirm, message, Spin } from 'antd';\r\nimport { SettingFilled, DeleteFilled, EditFilled, SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';\r\nimport Goback from './Goback';\r\n\r\nconst { Option } = Select;\r\n\r\nconst styles={\r\n    icons:{\r\n        fontSize: 25,\r\n        marginLeft: 10,\r\n        display:'inline-block',\r\n        verticalAlign:'middle'\r\n    },\r\n    search:{\r\n        margin:10,\r\n    },\r\n    add:{\r\n        margin:10,\r\n        float:'right',\r\n        clear:'right'\r\n    },\r\n\r\n};\r\n\r\n\r\n\r\nconst Role = () => {\r\n\r\n    useEffect(() => {\r\n        async function onLoad(){\r\n            await reloadData();\r\n             setIsLoad(true);\r\n        }onLoad();\r\n    },[]);\r\n    const [isLoad,setIsLoad] = useState(false);\r\n    const [dataSource,setDataSource] = useState([]);\r\n    const [showData,setShowData] = useState([]);\r\n    const [search,setSearch] = useState('');\r\n    const [visible,setVisible] = useState(false);\r\n    const [showEdit,setShowEdit] = useState(false);\r\n    const [updateData,setUpdateData] = useState({roleName:'',roleType:'',roleNote:'',roleOperation:[]});\r\n    const reloadData= () => {\r\n        const urlencoded = new URLSearchParams();\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n        return fetch(\"http://localhost:3001/users/getRole\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                let newData=[];\r\n                for(let i=0;i<result.data.length;i++){\r\n                    let item={};\r\n                    item.key=i.toString();\r\n                    item.roleName=result.data[i].roleName;\r\n                    item.roleType=result.data[i].roleType;\r\n                    item.roleOperation=result.data[i].roleOperation;\r\n                    item.roleNote=result.data[i].roleNote;\r\n                    newData.push(item);\r\n                }\r\n                setDataSource(newData);\r\n                setShowData(newData);\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    };\r\n    const onSearchChange = (e) => {\r\n        setSearch(e.target.value);\r\n    };\r\n    const onFinish = (values) => {\r\n        let addRole={ ...values };\r\n        if(addRole.roleNote===undefined){\r\n            addRole.roleNote='--';\r\n        }\r\n        if(addRole.roleOperation===undefined){\r\n            addRole.roleOperation=[];\r\n        }\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        const raw = JSON.stringify(addRole);\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:3001/users/addRole\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                if(result.status===0){\r\n                    reloadData();\r\n                    setVisible(false);\r\n                    message.success('更新成功');\r\n                }else\r\n                {\r\n                    message.error('更新失败');\r\n                }\r\n            })\r\n            .catch(() => {\r\n                message.error('更新失败');\r\n            });\r\n\r\n\r\n    };\r\n    const onSearch = () => {\r\n        const res=[];\r\n        for(let i=0; i<dataSource.length; i++){\r\n            for(let key in dataSource[i]){\r\n                if(dataSource[i][key].toString().indexOf(search)!==-1){\r\n                    res.push(dataSource[i]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        setShowData(res);\r\n    };\r\n    const onReset = () => {\r\n        setShowData(dataSource);\r\n    };\r\n    const onShow = () => {\r\n        setVisible(true);\r\n    };\r\n    const onClose = () =>{\r\n        setVisible(false);\r\n    };\r\n    const handleDelete = (key) => {\r\n        console.log(updateData);\r\n        const index=dataSource.findIndex((item) => {\r\n            return item.key===key;\r\n        });\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n\r\n        const urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"roleName\", dataSource[index].roleName);\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:3001/users/deleteRole\", requestOptions)\r\n            .then(() => {\r\n                reloadData();\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    };\r\n    const handleSave = (row) => {\r\n        const index = dataSource.findIndex((item) => row.key === item.key);\r\n        const item = dataSource[index];\r\n        dataSource.splice(index, 1, { ...item, ...row });\r\n        const newData = [...dataSource];\r\n        setDataSource(newData);\r\n        setShowData(dataSource);\r\n    };\r\n    const onCloseEdit = () => {\r\n        setShowEdit(false);\r\n    };\r\n    const onFinishEdit = (values) => {\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        const bodyObj={};\r\n\r\n        for(let key in values){\r\n            if(values[key]!==undefined){\r\n                Object.assign(bodyObj,{[key]:values[key]});\r\n            }\r\n        }\r\n        Object.assign(bodyObj,{'roleName':updateData.roleName});\r\n        console.log(bodyObj);\r\n        const row = JSON.stringify(bodyObj);\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: row,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:3001/users/updateRole\", requestOptions)\r\n            .then(() => {\r\n                setShowEdit(false);\r\n                reloadData();\r\n                message.success('更新成功');\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n    };\r\n    const handleEdit = (key) => {\r\n        const index=dataSource.findIndex((item) => {\r\n            return item.key===key;\r\n        });\r\n        setShowEdit(true);\r\n        setUpdateData(dataSource[index]);\r\n    };\r\n    const columns = [\r\n        {\r\n            title: '角色名称',\r\n            dataIndex: 'roleName',\r\n            key: 'roleName',\r\n            fontWeight:'600',\r\n        },\r\n        {\r\n            title: '角色类型',\r\n            dataIndex: 'roleType',\r\n            key: 'roleType',\r\n        },\r\n        {\r\n            title: '备注',\r\n            dataIndex: 'roleNote',\r\n            key: 'roleNote',\r\n            editable:true,\r\n            onCell:(record) => ({\r\n                record,\r\n                editable:true,\r\n                dataIndex:'roleNote',\r\n                title:'备注',\r\n                handleSave:handleSave\r\n            })\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'roleOperation',\r\n            dataIndex: 'roleOperation',\r\n            render: (actions, record) =>{\r\n                return (\r\n                    <>\r\n                    {\r\n                        actions.map(op => {\r\n                            switch (op) {\r\n                                case 'set':\r\n                                    return (\r\n                                        <Tooltip title={'设置'}>\r\n                                            <SettingFilled style={{...styles.icons, color:'#ADADAD'}}/>\r\n                                        </Tooltip>\r\n                                    );\r\n                                case 'delete':\r\n                                    return (\r\n                                        <Tooltip title={'删除'}>\r\n                                            <Popconfirm title=\"确定删除该角色?\" onConfirm={() => handleDelete(record.key)}  okText=\"确定\" cancelText=\"取消\">\r\n                                                <DeleteFilled style={{...styles.icons, color:'#CE0000'}}/>\r\n                                            </Popconfirm>\r\n                                        </Tooltip>\r\n                                    );\r\n                                case 'update':{\r\n                                    return (\r\n                                        <Tooltip title={'编辑'}>\r\n                                            <EditFilled style={{...styles.icons, color:'#46A3FF'}} onClick={() => handleEdit(record.key)}/>\r\n                                        </Tooltip>\r\n                                    );\r\n                                }\r\n                            }\r\n                        })}\r\n                    </>\r\n                )\r\n            }\r\n\r\n        },\r\n    ];\r\n\r\n\r\n    const table=(\r\n        <>\r\n        <Space style={styles.search}>\r\n            <Input onChange={onSearchChange}/>\r\n            <Button\r\n                type=\"primary\"\r\n                icon={<SearchOutlined />}\r\n                style={{ width: 90 }}\r\n                onClick={onSearch}\r\n            >\r\n                搜索\r\n            </Button>\r\n            <Button\r\n                onClick={onReset}\r\n            >\r\n                重置\r\n            </Button>\r\n        </Space>\r\n        <div style={styles.add}>\r\n            <Tooltip title={'添加角色'}>\r\n                <PlusCircleOutlined style={{...styles.icons, color:'#4169E1'}} onClick={onShow}/>\r\n            </Tooltip>\r\n        </div>\r\n        <Table columns={columns} dataSource={showData}/>\r\n        <Drawer\r\n            title=\"添加角色\"\r\n            width={400}\r\n            onClose={onClose}\r\n            visible={visible}\r\n            bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n            <Form\r\n                layout=\"vertical\"\r\n                onFinish={onFinish}\r\n            >\r\n                <Form.Item\r\n                    name=\"roleName\"\r\n                    label=\"角色名称\"\r\n                    rules={[{ required: true, message: '请输入角色名称' }]}\r\n                >\r\n                    <Input placeholder=\"请输入角色名称\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"roleType\"\r\n                    label=\"角色类型\"\r\n                    rules={[\r\n                        {\r\n                            required: true, message: '请选择角色类型'\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Select\r\n                        placeholder=\"请选择角色类型\"\r\n                        allowClear\r\n                    >\r\n                        <Option value=\"机构角色\">机构角色</Option>\r\n                        <Option value=\"项目角色\">项目角色</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name=\"roleNote\" label=\"备注\">\r\n                    <Input.TextArea />\r\n                </Form.Item>\r\n                <Form.Item name=\"roleOperation\" label=\"操作\">\r\n                    <Checkbox.Group>\r\n                        <Checkbox value=\"update\">修改</Checkbox>\r\n                        <Checkbox value=\"set\">设置</Checkbox>\r\n                        <Checkbox value=\"delete\">删除</Checkbox>\r\n                    </Checkbox.Group>\r\n                </Form.Item>\r\n\r\n                <Form.Item style={{\r\n                    textAlign: 'right',\r\n                }}>\r\n                    <Button onClick={onClose} style={{ marginRight: 8 }}>\r\n                        取消\r\n                    </Button>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        提交\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Drawer>\r\n        <Drawer\r\n            title=\"编辑角色\"\r\n            width={400}\r\n            onClose={onCloseEdit}\r\n            visible={showEdit}\r\n            bodyStyle={{ paddingBottom: 80 }}\r\n            destroyOnClose={true}\r\n        >\r\n            <Form\r\n                layout=\"vertical\"\r\n                onFinish={onFinishEdit}\r\n            >\r\n                <Form.Item\r\n                    name=\"roleName\"\r\n                    label=\"角色名称\"\r\n                >\r\n                    <Input disabled={true}\r\n                           defaultValue={updateData.roleName}\r\n                           value={updateData.roleName}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"roleType\"\r\n                    label=\"角色类型\"\r\n                >\r\n                    <Select\r\n                        placeholder=\"请选择角色类型\"\r\n                        allowClear\r\n                        defaultValue={updateData.roleType}\r\n                    >\r\n                        <Option value=\"机构角色\">机构角色</Option>\r\n                        <Option value=\"项目角色\">项目角色</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name=\"roleNote\" label=\"备注\">\r\n                    <Input.TextArea defaultValue={updateData.roleNote}/>\r\n                </Form.Item>\r\n                <Form.Item name=\"roleOperation\" label=\"操作\">\r\n                    <Select\r\n                        mode='multiple'\r\n                        allowClear\r\n                        defaultValue={updateData.roleOperation}\r\n                        value={updateData.roleOperation}\r\n                    >\r\n                        <Option value=\"delete\">删除</Option>\r\n                        <Option value=\"update\">编辑</Option>\r\n                        <Option value=\"set\">设置</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item style={{\r\n                    textAlign: 'right',\r\n                }}>\r\n                    <Button onClick={onCloseEdit} style={{ marginRight: 8 }}>\r\n                        取消\r\n                    </Button>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        提交\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Drawer>\r\n        </>\r\n    );\r\n\r\n    const load=(\r\n        <div className=\"example\" style={{textAlign:'center'}}>\r\n            <Spin />\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Goback path={['系统设置','角色管理']}/>\r\n            {\r\n                isLoad?table:load\r\n            }\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default Role;\r\n","D:\\Document\\code\\react\\sz_metro\\src\\Store\\Store.js",[],"D:\\Document\\code\\react\\sz_metro\\src\\Store\\Reducer.js",["135"],"import * as ActionTypes from './ActionTypes';\r\n\r\nexport default (state={ userInfo:{} }, action) => {\r\n    const { userInfo } = action;\r\n    switch (action.type) {\r\n        case ActionTypes.LOG_IN:\r\n            return { ...state, userInfo: userInfo };\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Document\\code\\react\\sz_metro\\src\\Store\\ActionTypes.js",[],"D:\\Document\\code\\react\\sz_metro\\src\\Component\\Login.js",[],"D:\\Document\\code\\react\\sz_metro\\src\\Component\\Log.js",["136"],"import React from 'react';\r\nimport { Form, Input, Button, Checkbox, message } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\nimport * as Actions from '../Store/Actions';\r\n\r\nconst Log = ({history, onLogin}) => {\r\n    const onFinish = (values) => {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n\r\n        let urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"username\", values.username);\r\n        urlencoded.append(\"password\", values.password);\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:3001/users/login\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if(result.status===0){\r\n                    history.push({\r\n                        pathname:'/home'\r\n                    });\r\n                    onLogin(values);\r\n                }else{\r\n                    message.error('用户名或密码错误');\r\n                }\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请输入用户名!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请输入密码!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                    <Checkbox>记住密码</Checkbox>\r\n                </Form.Item>\r\n\r\n                <a className=\"login-form-forgot\" href=\"\">\r\n                    <Link to='/log/register/'>注册</Link>\r\n                </a>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    登录\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nfunction mapDispatch(dispatch) {\r\n    return {\r\n        onLogin:(userInfo) => {\r\n            dispatch(Actions.login(userInfo));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatch)(Log);","D:\\Document\\code\\react\\sz_metro\\src\\Component\\Register.js",["137","138","139","140","141","142","143","144","145","146","147"],"import React, { useState } from 'react';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Cascader,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Checkbox,\r\n    Button,\r\n    AutoComplete,\r\n    message,\r\n} from 'antd';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\nconst Register = ({history}) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values) => {\r\n        console.log(values);\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n\r\n        let urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"username\", values.name);\r\n        urlencoded.append(\"password\", values.password);\r\n        urlencoded.append(\"userPhone\", values.phone);\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:3001/users/register\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                if(result.status===0){\r\n                    message.success('注册成功');\r\n                    history.push({\r\n                        pathname:'/log'\r\n                    })\r\n                }else{\r\n                    message.error('用户名已注册!');\r\n                }\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Form\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n        >\r\n            <Form.Item\r\n                name=\"name\"\r\n                label=\"用户名\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请输入用户名！',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"password\"\r\n                label=\"密码\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请输入密码！',\r\n                    },\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"confirm\"\r\n                label=\"确认密码\"\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请确认密码！',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n\r\n                            return Promise.reject('两次输入密码不一致！');\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"phone\"\r\n                label=\"电话号码\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请输入电话号码！',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    style={{\r\n                        width: '100%',\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{width:'100%',}}>\r\n                    注册\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n\r\n","D:\\Document\\code\\react\\sz_metro\\src\\Store\\Actions.js",[],"D:\\Document\\code\\react\\sz_metro\\src\\Component\\Users.js",[],"D:\\Document\\code\\react\\sz_metro\\src\\Component\\Goback.js",[],["148","149"],"D:\\Documents\\metro_monitor\\src\\index.js",[],["150","151"],"D:\\Documents\\metro_monitor\\src\\reportWebVitals.js",[],"D:\\Documents\\metro_monitor\\src\\App.js",["152","153","154","155"],"D:\\Documents\\metro_monitor\\src\\Store\\Store.js",[],"D:\\Documents\\metro_monitor\\src\\Component\\Login.js",[],"D:\\Documents\\metro_monitor\\src\\Component\\Navigate.js",["156"],"D:\\Documents\\metro_monitor\\src\\Component\\Users.js",[],"D:\\Documents\\metro_monitor\\src\\Component\\Role.js",["157","158"],"D:\\Documents\\metro_monitor\\src\\Store\\Actions.js",[],"D:\\Documents\\metro_monitor\\src\\Component\\Log.js",["159"],"D:\\Documents\\metro_monitor\\src\\Store\\Reducer.js",["160"],"import * as ActionTypes from './ActionTypes';\r\n\r\nexport default (state={ userInfo:{} }, action) => {\r\n    const { userInfo } = action;\r\n    switch (action.type) {\r\n        case ActionTypes.LOG_IN:\r\n            return { ...state, userInfo: userInfo };\r\n        case ActionTypes.LOG_OUT:\r\n            return {...state, userInfo: {}};\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Documents\\metro_monitor\\src\\Component\\Register.js",[],"D:\\Documents\\metro_monitor\\src\\Component\\Goback.js",[],"D:\\Documents\\metro_monitor\\src\\Store\\ActionTypes.js",[],["161","162"],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":70,"column":17,"nodeType":"169","endLine":70,"endColumn":50},{"ruleId":"167","severity":1,"message":"168","line":75,"column":17,"nodeType":"169","endLine":75,"endColumn":49},{"ruleId":"167","severity":1,"message":"168","line":88,"column":17,"nodeType":"169","endLine":88,"endColumn":84},{"ruleId":"167","severity":1,"message":"168","line":96,"column":13,"nodeType":"169","endLine":98,"endColumn":16},{"ruleId":"170","severity":1,"message":"171","line":19,"column":17,"nodeType":"169","endLine":19,"endColumn":61},{"ruleId":"172","severity":1,"message":"173","line":236,"column":40,"nodeType":"174","messageId":"175","endLine":236,"endColumn":42},{"ruleId":"176","severity":1,"message":"177","line":237,"column":29,"nodeType":"178","messageId":"179","endLine":259,"endColumn":30},{"ruleId":"180","severity":1,"message":"181","line":3,"column":1,"nodeType":"182","endLine":11,"endColumn":2},{"ruleId":"167","severity":1,"message":"183","line":80,"column":17,"nodeType":"169","endLine":80,"endColumn":58},{"ruleId":"184","severity":1,"message":"185","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"188","line":5,"column":5,"nodeType":"186","messageId":"187","endLine":5,"endColumn":12},{"ruleId":"184","severity":1,"message":"189","line":6,"column":5,"nodeType":"186","messageId":"187","endLine":6,"endColumn":13},{"ruleId":"184","severity":1,"message":"190","line":7,"column":5,"nodeType":"186","messageId":"187","endLine":7,"endColumn":11},{"ruleId":"184","severity":1,"message":"191","line":8,"column":5,"nodeType":"186","messageId":"187","endLine":8,"endColumn":8},{"ruleId":"184","severity":1,"message":"192","line":9,"column":5,"nodeType":"186","messageId":"187","endLine":9,"endColumn":8},{"ruleId":"184","severity":1,"message":"193","line":10,"column":5,"nodeType":"186","messageId":"187","endLine":10,"endColumn":13},{"ruleId":"184","severity":1,"message":"194","line":12,"column":5,"nodeType":"186","messageId":"187","endLine":12,"endColumn":17},{"ruleId":"184","severity":1,"message":"195","line":15,"column":10,"nodeType":"186","messageId":"187","endLine":15,"endColumn":14},{"ruleId":"184","severity":1,"message":"196","line":15,"column":16,"nodeType":"186","messageId":"187","endLine":15,"endColumn":24},{"ruleId":"184","severity":1,"message":"197","line":16,"column":10,"nodeType":"186","messageId":"187","endLine":16,"endColumn":32},{"ruleId":"163","replacedBy":"198"},{"ruleId":"165","replacedBy":"199"},{"ruleId":"163","replacedBy":"200"},{"ruleId":"165","replacedBy":"201"},{"ruleId":"167","severity":1,"message":"168","line":70,"column":17,"nodeType":"169","endLine":70,"endColumn":50},{"ruleId":"167","severity":1,"message":"168","line":75,"column":17,"nodeType":"169","endLine":75,"endColumn":49},{"ruleId":"167","severity":1,"message":"168","line":88,"column":17,"nodeType":"169","endLine":88,"endColumn":84},{"ruleId":"167","severity":1,"message":"168","line":96,"column":13,"nodeType":"169","endLine":98,"endColumn":16},{"ruleId":"170","severity":1,"message":"171","line":19,"column":17,"nodeType":"169","endLine":19,"endColumn":61},{"ruleId":"172","severity":1,"message":"173","line":236,"column":40,"nodeType":"174","messageId":"175","endLine":236,"endColumn":42},{"ruleId":"176","severity":1,"message":"177","line":237,"column":29,"nodeType":"178","messageId":"179","endLine":259,"endColumn":30},{"ruleId":"167","severity":1,"message":"183","line":80,"column":17,"nodeType":"169","endLine":80,"endColumn":58},{"ruleId":"180","severity":1,"message":"181","line":3,"column":1,"nodeType":"182","endLine":13,"endColumn":2},{"ruleId":"163","replacedBy":"202"},{"ruleId":"165","replacedBy":"203"},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Tooltip' is defined but never used.","'Cascader' is defined but never used.","'Select' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Checkbox' is defined but never used.","'AutoComplete' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'QuestionCircleOutlined' is defined but never used.",["204"],["205"],["204"],["205"],["204"],["205"],"no-global-assign","no-unsafe-negation"]